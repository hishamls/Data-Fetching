{"ast":null,"code":"var _jsxFileName = \"/home/hishamls/0-webProjects/0-ReactProjects/Data-Fetching/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport MoviesList from \"./components/MoviesList\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [movies, setMovies] = useState([]);\n  const fetchMoviesHandler = new Promise((resolveFun, rejectFun) => {\n    let connect = true;\n    if (connect) {\n      console.log(\"connection is established!\");\n      console.log(\"connection is established!\");\n    } else {}\n    resolveFun();\n  });\n\n  // const fetchMoviesHandler = () => {\n  //   fetch(\"https://swapi.py4e.com/api/films\")\n  //     .then((response) => {\n  //       return response.json();\n  //     })\n  //     .then((data) => {\n  //       const transformedData = data.results.map((movieData) => {\n  //         // results is a property for the promise\n  //         return {\n  //           id: movieData[\"episode_id\"],\n  //           title: movieData.title,\n  //           openingText: movieData[\"opening_crawl\"],\n  //           releaseDate: movieData[\"release_date\"],\n  //         };\n  //       });\n  //       setMovies(transformedData);\n  //     })\n  //     .catch((reason) => console.log(Error(reason)));\n  // };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: fetchMoviesHandler,\n        children: \"Fetch Movies\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(MoviesList, {\n        movies: movies\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"m6SRVq9N0POigGpMlnh/6woD7xI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","MoviesList","jsxDEV","_jsxDEV","App","_s","movies","setMovies","fetchMoviesHandler","Promise","resolveFun","rejectFun","connect","console","log","Fragment","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/hishamls/0-webProjects/0-ReactProjects/Data-Fetching/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\n\nimport MoviesList from \"./components/MoviesList\";\nimport \"./App.css\";\n\nfunction App() {\n  const [movies, setMovies] = useState([]);\n\n  const fetchMoviesHandler = new Promise((resolveFun, rejectFun) => {\n    let connect = true;\n    if (connect) {\n      console.log(\"connection is established!\");\n      console.log(\"connection is established!\");\n    } else {\n    }\n\n    resolveFun();\n  });\n\n  // const fetchMoviesHandler = () => {\n  //   fetch(\"https://swapi.py4e.com/api/films\")\n  //     .then((response) => {\n  //       return response.json();\n  //     })\n  //     .then((data) => {\n  //       const transformedData = data.results.map((movieData) => {\n  //         // results is a property for the promise\n  //         return {\n  //           id: movieData[\"episode_id\"],\n  //           title: movieData.title,\n  //           openingText: movieData[\"opening_crawl\"],\n  //           releaseDate: movieData[\"release_date\"],\n  //         };\n  //       });\n  //       setMovies(transformedData);\n  //     })\n  //     .catch((reason) => console.log(Error(reason)));\n  // };\n\n  return (\n    <React.Fragment>\n      <section>\n        <button onClick={fetchMoviesHandler}>Fetch Movies</button>\n      </section>\n\n      <section>\n        <MoviesList movies={movies} />\n      </section>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAEvC,OAAOC,UAAU,MAAM,yBAAyB;AAChD,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAExC,MAAMQ,kBAAkB,GAAG,IAAIC,OAAO,CAAC,CAACC,UAAU,EAAEC,SAAS,KAAK;IAChE,IAAIC,OAAO,GAAG,IAAI;IAClB,IAAIA,OAAO,EAAE;MACXC,OAAO,CAACC,GAAG,CAAC,4BAA4B,CAAC;MACzCD,OAAO,CAACC,GAAG,CAAC,4BAA4B,CAAC;IAC3C,CAAC,MAAM,CACP;IAEAJ,UAAU,CAAC,CAAC;EACd,CAAC,CAAC;;EAEF;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,oBACEP,OAAA,CAACJ,KAAK,CAACgB,QAAQ;IAAAC,QAAA,gBACbb,OAAA;MAAAa,QAAA,eACEb,OAAA;QAAQc,OAAO,EAAET,kBAAmB;QAAAQ,QAAA,EAAC;MAAY;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnD,CAAC,eAEVlB,OAAA;MAAAa,QAAA,eACEb,OAAA,CAACF,UAAU;QAACK,MAAM,EAAEA;MAAO;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACI,CAAC;AAErB;AAAChB,EAAA,CA7CQD,GAAG;AAAAkB,EAAA,GAAHlB,GAAG;AA+CZ,eAAeA,GAAG;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}