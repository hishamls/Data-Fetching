{"ast":null,"code":"var _jsxFileName = \"/home/hishamls/0-webProjects/0-ReactProjects/Data-Fetching/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport MoviesList from \"./components/MoviesList\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  // const fetchMoviesHandler = new Promise((resolveFun, rejectFun) => {\n  //   let connect = false;\n  //   if (connect) {\n  //     resolveFun(\"connection is established!\");\n  //   } else {\n  //     rejectFun(\"connection is not established!\");\n  //   }\n  // });\n  // fetchMoviesHandler.then(\n  //   (resultValue) => console.log(`Good: ${resultValue}`),\n  //   (rejectValue) => console.log(`Bad: ${rejectValue}`)\n  // );\n  // console.log(fetchMoviesHandler);\n\n  async function fetchMoviesHandler() {\n    const response = await fetch(\"https://swapi.py4e.com/api/films\");\n    const data = await response.json();\n    const transformedData = data.results.map(movieData => {\n      // results is a property for the data\n      return {\n        id: movieData[\"episode_id\"],\n        title: movieData.title,\n        openingText: movieData[\"opening_crawl\"],\n        releaseDate: movieData[\"release_date\"]\n      };\n    });\n    setMovies(transformedData);\n  }\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: fetchMoviesHandler,\n        children: \"Fetch Movies\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(MoviesList, {\n        movies: movies\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"K6Fmynn3O5MwYfimS2e7LgCybds=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","MoviesList","jsxDEV","_jsxDEV","App","_s","movies","setMovies","isLoading","setIsLoading","fetchMoviesHandler","response","fetch","data","json","transformedData","results","map","movieData","id","title","openingText","releaseDate","Fragment","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/hishamls/0-webProjects/0-ReactProjects/Data-Fetching/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\n\nimport MoviesList from \"./components/MoviesList\";\nimport \"./App.css\";\n\nfunction App() {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  // const fetchMoviesHandler = new Promise((resolveFun, rejectFun) => {\n  //   let connect = false;\n  //   if (connect) {\n  //     resolveFun(\"connection is established!\");\n  //   } else {\n  //     rejectFun(\"connection is not established!\");\n  //   }\n  // });\n  // fetchMoviesHandler.then(\n  //   (resultValue) => console.log(`Good: ${resultValue}`),\n  //   (rejectValue) => console.log(`Bad: ${rejectValue}`)\n  // );\n  // console.log(fetchMoviesHandler);\n\n  async function fetchMoviesHandler() {\n    const response = await fetch(\"https://swapi.py4e.com/api/films\");\n    const data = await response.json();\n    const transformedData = data.results.map((movieData) => {\n      // results is a property for the data\n      return {\n        id: movieData[\"episode_id\"],\n        title: movieData.title,\n        openingText: movieData[\"opening_crawl\"],\n        releaseDate: movieData[\"release_date\"],\n      };\n    });\n    setMovies(transformedData);\n  }\n\n  return (\n    <React.Fragment>\n      <section>\n        <button onClick={fetchMoviesHandler}>Fetch Movies</button>\n      </section>\n\n      <section>\n        <MoviesList movies={movies} />\n      </section>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAEvC,OAAOC,UAAU,MAAM,yBAAyB;AAChD,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACQ,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;;EAEjD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,eAAeU,kBAAkBA,CAAA,EAAG;IAClC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,kCAAkC,CAAC;IAChE,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;IAClC,MAAMC,eAAe,GAAGF,IAAI,CAACG,OAAO,CAACC,GAAG,CAAEC,SAAS,IAAK;MACtD;MACA,OAAO;QACLC,EAAE,EAAED,SAAS,CAAC,YAAY,CAAC;QAC3BE,KAAK,EAAEF,SAAS,CAACE,KAAK;QACtBC,WAAW,EAAEH,SAAS,CAAC,eAAe,CAAC;QACvCI,WAAW,EAAEJ,SAAS,CAAC,cAAc;MACvC,CAAC;IACH,CAAC,CAAC;IACFX,SAAS,CAACQ,eAAe,CAAC;EAC5B;EAEA,oBACEZ,OAAA,CAACJ,KAAK,CAACwB,QAAQ;IAAAC,QAAA,gBACbrB,OAAA;MAAAqB,QAAA,eACErB,OAAA;QAAQsB,OAAO,EAAEf,kBAAmB;QAAAc,QAAA,EAAC;MAAY;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnD,CAAC,eAEV1B,OAAA;MAAAqB,QAAA,eACErB,OAAA,CAACF,UAAU;QAACK,MAAM,EAAEA;MAAO;QAAAoB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACI,CAAC;AAErB;AAACxB,EAAA,CA5CQD,GAAG;AAAA0B,EAAA,GAAH1B,GAAG;AA8CZ,eAAeA,GAAG;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}